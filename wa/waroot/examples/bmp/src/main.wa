import "debug"
import "bytes"
import "image"
import "image/bmp"

func main {
	m := image.NewRGBA(image.Rect(0, 0, 256, 256))
	for x := 0; x < m.Rect.Dx(); x++ {
		for y := 0; y < m.Rect.Dy(); y++ {
			m.Pix[(y*256+x)*4+0] = u8(x)
			m.Pix[(y*256+x)*4+1] = u8(x)
			m.Pix[(y*256+x)*4+2] = u8(y)
			m.Pix[(y*256+x)*4+3] = 255
		}
	}

	buf: bytes.Buffer
	if err := bmp.Encode(&buf, m); err != nil {
		panic(err.Error())
	}

	debug.WriteFile("./output/a.out.bmp", buf.Bytes())

	data := debug.ReadFile("./output/a.out.bmp")

	// 有错误
	m2, err := bmp.Decode(data)
	if err != nil {
		panic(err.Error())
	}

	if rgba, ok := m2.(*image.RGBA); ok {
		println("rect:", rgba.Rect.Dx(), rgba.Rect.Dy())
		println("Stride:", rgba.Stride)
		buf: bytes.Buffer
		if err := bmp.Encode(&buf, rgba); err != nil {
			panic(err.Error())
		}
		debug.WriteFile("./output/a2.out.bmp", buf.Bytes())
	}
}

//func WriteFile(name: string, data: []byte) {
